%%time
failed=[]
for ticker in tickersdo[:]:
    file = macro.loc[ticker,"File"]
    company = universe.loc[ticker,"Name"]
    sector = universe.loc[ticker,"Sector"]
    folder = universe.loc[ticker,"Folder"]
    sedol = universe.loc[ticker,'Sedol']
    model_path ='S:\\ATLAS Investment\\Sectors & Companies\\'+sector +'\\Companies\\'+ folder +'\\Model WIP\\'


    #     when the analyst forgot didnt enter the ending
    if file[-5:] != '.xlsb':
        file=file+'.xlsb'
    print(model_path+file) 
#     check if file is in the folder
    if os.path.isfile(model_path+file) == False:
        failed.append(ticker)
        continue
    new_file = file[:file.find('.xlsb')]+" "+version+'.xlsb'
    if os.path.isfile(model_path+new_file) == True:
        donealready.append(ticker)
        continue   
    flag=0
    def MyThread5():
        global flag
        global file_window
        global wb
        time.sleep(2)
        wb = xw.Book(model_path+file, update_links=False)
        wb.app.api.RegisterXLL(r"C:\Program Files (x86)\Modano\MODANO.XLAM")
        wb.activate(steal_focus=True)
        time.sleep(15)
        flag=1
    def MyThread6():
        global flag
        while flag==0:
            time.sleep(1)
            try:
                hwndMain = win32gui.FindWindow(None, "Modano - Freeform Formulas Detected") 
                win32gui.SetForegroundWindow(hwndMain)
                print(ticker+" modano")
                time.sleep(0.5)
                keyboard.press(Key.enter)
                time.sleep(0.5)
                keyboard.release(Key.enter)
            except:
                pass

    t5 = threading.Thread(target=MyThread5, args=[])
    t6 = threading.Thread(target=MyThread6, args=[])
    t6.start()
    t5.start()
    t5.join()
    t6.join()
    try:
        file_window = file[:-5]+' - Excel'
#         shell.SendKeys('%')
        hwndMain = win32gui.FindWindow(None, file_window)
#         win32gui.MoveWindow(hwndMain,0,0,1000,1000,True)
    except:
        file_window = file[:-5]+'  -  Read-Only - Excel'
        hwndMain = win32gui.FindWindow(None, file_window)
#         win32gui.MoveWindow(hwndMain,0,0,1000,1000,True)
    wb = xw.Book(model_path+file, update_links=False)
